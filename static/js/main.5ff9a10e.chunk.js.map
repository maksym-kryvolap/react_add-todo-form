{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","usersFromServer","filter","person","className","href","TodoInfo","title","completed","userId","classNames","TodoList","todos","map","App","useState","titleText","setTitleText","selectedUser","setSelectedUser","emptyField","setEmptyField","maxId","setMaxId","todosFromServer","setTodos","handleSubmit","event","preventDefault","maxValue","i","length","current","find","human","newUser","addUser","action","method","onSubmit","type","placeholder","value","onChange","target","disabled","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ff9a10e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\n\ntype Props = {\n  id: number,\n};\n\ntype User = {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n};\n\nexport const UserInfo: React.FC<Props> = ({ id }) => {\n  const user: User[] = usersFromServer.filter(person => person.id === id);\n  const { name, email } = user[0];\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  id,\n  title,\n  completed,\n  userId,\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo id={userId} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\n\ninterface Todo {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n}\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map(person => {\n        const {\n          id,\n          title,\n          completed,\n          userId,\n        } = person;\n\n        return (\n          <TodoInfo\n            key={id}\n            id={id}\n            title={title}\n            completed={completed}\n            userId={userId}\n          />\n        );\n      })}\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { FormEvent, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App: React.FC = () => {\n  const [titleText, setTitleText] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [emptyField, setEmptyField] = useState(false);\n  const [maxId, setMaxId] = useState(0);\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const addUser = () => {\n    let maxValue = 0;\n\n    if (maxId <= maxValue) {\n      for (let i = 0; i < todosFromServer.length; i += 1) {\n        if (todosFromServer[i].id > maxValue) {\n          maxValue = todosFromServer[i].id;\n        }\n      }\n\n      setMaxId(current => current + maxValue + 1);\n    } else {\n      setMaxId(current => current + 1);\n    }\n\n    if (selectedUser !== '') {\n      const person = usersFromServer\n        .find(human => human.id === +selectedUser);\n\n      if (titleText && selectedUser && person) {\n        const newUser = {\n          id: maxId,\n          title: titleText,\n          completed: false,\n          userId: person.id,\n        };\n\n        setTodos([...todos, newUser]);\n        setTitleText('');\n        setSelectedUser('');\n        setEmptyField(false);\n      }\n    }\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!titleText || !selectedUser) {\n      setEmptyField(true);\n\n      return;\n    }\n\n    addUser();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={event => handleSubmit(event)}\n      >\n        <div className=\"field\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={titleText}\n            onChange={(({ target }) => setTitleText(target.value))}\n          />\n          {(emptyField && !titleText) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          {'User: '}\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={event => {\n              setSelectedUser(event.target.value);\n            }}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {(emptyField && !selectedUser)\n            && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}